{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY-PC\\\\ReactJS\\\\react-first-js\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from 'react-bootstrap/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('');\n  const timeoutRef = useRef(null);\n  function Alert2(message, type) {\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setShowAlert(false);\n    }, 3000);\n  }\n  function toggleMode() {\n    if (theme === 'light') {\n      setTheme('dark');\n      document.body.style.backgroundColor = '#343a40';\n      Alert2(\"Dark Mode is Enabled\", \"success\");\n    } else {\n      setTheme('light');\n      document.body.style.backgroundColor = 'white';\n      Alert2(\"Light Mode is Enabled\", \"success\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"React-JS\",\n      aboutText: \"About\",\n      theme: theme,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      children: [alertType, \": \", alertMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: () => /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter Your Text Here\",\n            theme: theme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about/*\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"mbotdpTR+reJGE8Ch0z7sQjbSHc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Navbar","TextForm","Alert","About","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","theme","setTheme","showAlert","setShowAlert","alertMessage","setAlertMessage","alertType","setAlertType","timeoutRef","Alert2","message","type","clearTimeout","current","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","aboutText","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClose","dismissible","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/MY-PC/ReactJS/react-first-js/src/App.js"],"sourcesContent":["import { useState, useRef} from 'react';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from 'react-bootstrap/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Routes, Route } from 'react-router-dom';\n\n\nfunction App() {\n  const [theme, setTheme] = useState('light');\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('');\n\n  const timeoutRef = useRef(null);\n\n  function Alert2(message, type){\n    setAlertMessage(message);\n    setAlertType(type);\n    setShowAlert(true);\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setShowAlert(false);\n    }, 3000);\n  }\n\n  function toggleMode() {\n    if(theme === 'light') {\n      setTheme('dark')\n      document.body.style.backgroundColor='#343a40';\n      Alert2(\"Dark Mode is Enabled\", \"success\");\n    }\n    else{\n      setTheme('light')\n      document.body.style.backgroundColor='white';\n      Alert2(\"Light Mode is Enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title={\"React-JS\"} aboutText={\"About\"} theme={theme} toggleMode={toggleMode} />\n      {showAlert &&\n        <Alert variant=\"info\" onClose={() => setShowAlert(false)} dismissible>\n          {alertType}: {alertMessage}\n        </Alert>\n      }\n      <div className='container my-3'>\n        <Routes>\n          <Route path=\"/\" element={() => <TextForm heading={\"Enter Your Text Here\"} theme={theme} />} />\n          <Route path=\"about/*\" element={<About />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}